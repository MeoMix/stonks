{"version":3,"sources":["BasicCandlestickChart.tsx","App.tsx","reportWebVitals.ts","index.tsx","data/index.ts","data/withOHLCData.tsx"],"names":["BasicCandlestick","margin","left","right","top","bottom","xScaleProvider","discontinuousTimeScaleProviderBuilder","inputDateAccessor","d","date","yExtents","data","high","low","this","props","initialData","height","ratio","width","xScale","xAccessor","displayXAccessor","max","length","xExtents","Math","ChartCanvas","seriesName","Chart","id","CandlestickSeries","XAxis","YAxis","React","Custom","withSize","style","minHeight","withDeviceRatio","withOHLCData","useStyles","makeStyles","root","display","flexDirection","backgroundColor","fontSize","color","alignItems","overflow","header","textAlign","todos","chartContainer","urlBase","App","classes","useState","ethereumOHLC","setEthereumOHLC","reveal","a","setDoneState","i","incrementCounter","Promise","resolve","setTimeout","updateState","counter","ethereum","seed","setSeed","parsedData","map","timestamp","open","close","Date","useEffect","axios","get","loadCoinGecko","streak","setStreak","loadCounter","doneState","goalRef","useRef","current","previousCloseRef","post","undefined","className","Button","onClick","variant","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","parseDate","timeParse","parseData","key","Number","Object","prototype","hasOwnProperty","call","dataSet","OriginalComponent","state","message","thirtyMinuteData","tsvString","TSV","stringify","ourData","tsvParse","setState"],"mappings":"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","file":"static/js/main.7e4014fd.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Chart, ChartCanvas } from \"@react-financial-charts/core\";\r\nimport { XAxis, YAxis } from \"@react-financial-charts/axes\";\r\nimport { discontinuousTimeScaleProviderBuilder } from \"@react-financial-charts/scales\";\r\nimport { CandlestickSeries } from \"@react-financial-charts/series\";\r\nimport { IOHLCData, withOHLCData } from \"./data\";\r\nimport { withDeviceRatio, withSize } from \"@react-financial-charts/utils\";\r\n\r\ninterface ChartProps {\r\n    readonly data: IOHLCData[];\r\n    readonly height: number;\r\n    readonly width: number;\r\n    readonly ratio: number;\r\n}\r\n\r\nclass BasicCandlestick extends React.Component<ChartProps> {\r\n    private readonly margin = { left: 0, right: 40, top: 0, bottom: 24 };\r\n    private readonly xScaleProvider = discontinuousTimeScaleProviderBuilder().inputDateAccessor(\r\n        (d: IOHLCData) => d.date,\r\n    );\r\n\r\n    public render() {\r\n        const { data: initialData, height, ratio, width } = this.props;\r\n\r\n        const { data, xScale, xAccessor, displayXAccessor } = this.xScaleProvider(initialData);\r\n\r\n        const max = xAccessor(data[data.length - 1]);\r\n        const min = xAccessor(data[Math.max(0, data.length - 100)]);\r\n        const xExtents = [min, max];\r\n\r\n        return (\r\n          <ChartCanvas\r\n            height={height}\r\n            ratio={ratio}\r\n            width={width}\r\n            margin={this.margin}\r\n            data={data}\r\n            displayXAccessor={displayXAccessor}\r\n            seriesName=\"Data\"\r\n            xScale={xScale}\r\n            xAccessor={xAccessor}\r\n            xExtents={xExtents}\r\n          >\r\n            <Chart id={1} yExtents={this.yExtents}>\r\n              <CandlestickSeries />\r\n              <XAxis />\r\n              <YAxis />\r\n            </Chart>\r\n          </ChartCanvas>\r\n        );\r\n    }\r\n\r\n    private readonly yExtents = (data: IOHLCData) => {\r\n        return [data.high, data.low];\r\n    };\r\n}\r\n\r\nexport const Custom = withSize({ style: { minHeight: 600 } })(withDeviceRatio()(BasicCandlestick));\r\n\r\nexport const Daily = withOHLCData()(withSize({ style: { minHeight: 600 } })(withDeviceRatio()(BasicCandlestick)));\r\n\r\nexport const Intraday = withOHLCData(\"MINUTES\")(\r\n    withSize({ style: { minHeight: 600 } })(withDeviceRatio()(BasicCandlestick)),\r\n);","import { useEffect, useState, useRef } from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Custom } from './BasicCandlestickChart';\nimport { IOHLCData } from \"./data/iOHLCData\";\nimport { } from '@react-financial-charts/core';\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n\n  header: {\n    textAlign: 'center',\n  },\n\n  todos: {\n    display: 'flex',\n  },\n\n  chartContainer: {\n    width: '60%',\n  },\n});\n\nconst isDev = false;\nconst urlBase = isDev ? 'http://localhost:8000/' : 'https://whenmoon-stonksdb.herokuapp.com/';\n\nfunction App() {\n  const classes = useStyles();\n  const [ethereumOHLC, setEthereumOHLC] = useState<IOHLCData[]>();\n\n  async function reveal() {\n    setDoneState('pending');\n\n    for (let i = 0; i < 7; i++) {\n      await incrementCounter();\n      await new Promise((resolve) => setTimeout(resolve, 100));\n    }\n  }\n\n  async function updateState(counter: number, ethereum: any, seed: number) {\n    // setCounter(counter);\n    setSeed(seed)\n\n    // @ts-ignore\n    const parsedData = ethereum.map(([timestamp, open, high, low, close]) => {\n      return {\n          date: new Date(timestamp),\n          open,\n          high,\n          low,\n          close,\n      };\n    });\n\n    setEthereumOHLC(parsedData);\n  }\n\n  useEffect(() => {\n    async function loadCoinGecko() {\n      const { data: { ethereum  } } = await axios.get(`${urlBase}coingecko`);\n\n      // @ts-ignore\n      const parsedData = ethereum.map(([timestamp, open, high, low, close]) => {\n        return {\n            date: new Date(timestamp),\n            open,\n            high,\n            low,\n            close,\n        };\n      });\n\n      setEthereumOHLC(parsedData);\n    }\n\n    loadCoinGecko();\n  }, []);\n\n  const [streak, setStreak] = useState<number>(0);\n  useEffect(() => {\n    async function loadCounter() {\n      const { data: { counter, ethereum, seed  } } = await axios.get(`${urlBase}counter`);\n\n      await updateState(counter, ethereum, seed);\n    }\n\n    loadCounter();\n  }, []);\n\n  const [doneState, setDoneState] = useState<'win' | 'lose' | 'push' | 'pending' | 'deciding' | undefined>();\n\n  const goalRef = useRef<'now' | 'later'>();\n  async function handleNowClick() {\n    goalRef.current = 'now';\n    await reveal();\n\n    setDoneState('deciding');\n  }\n\n  async function handleLaterClick() {\n    goalRef.current = 'later';\n    await reveal();\n    setDoneState('deciding');\n  }\n\n  const previousCloseRef = useRef<number | undefined>()\n  useEffect(() => {\n    // Get the close and compare it to close, if higher - win\n    if (doneState === 'pending' && previousCloseRef.current === undefined) {\n      previousCloseRef.current = ethereumOHLC![ethereumOHLC!.length - 1].close;\n    }\n\n    if (doneState === 'deciding') {\n      const close = ethereumOHLC![ethereumOHLC!.length - 1].close;\n\n      if (previousCloseRef.current! > close) {\n        setDoneState(goalRef.current === 'now' ? 'lose' : 'win');\n      } else if (previousCloseRef.current! < close) {\n        setDoneState(goalRef.current === 'now' ? 'win' : 'lose');\n      } else {\n        setDoneState('push');\n      }\n    }\n\n    if (doneState === 'win' || doneState === 'lose' || doneState === 'push') {\n      previousCloseRef.current = undefined;\n    }\n  }, [ethereumOHLC, doneState]);\n\n  useEffect(() => {\n    if (doneState === 'win') {\n      setStreak(streak + 1);\n    } else if (doneState === 'lose') {\n      setStreak(0);\n    }\n  }, [doneState])\n\n  async function incrementCounter() {\n    const { data: { counter, ethereum, seed  } } = await axios.post(`${urlBase}counter`);\n\n    await updateState(counter, ethereum, seed);\n  }\n\n  const [seed, setSeed] = useState<number>();\n  async function handleNextChartClick() {\n    const { data: { counter, ethereum, seed } } = await axios.get(`${urlBase}coingecko-random`);\n\n    await updateState(counter, ethereum, seed);\n    setDoneState(undefined);\n  }\n\n  return (\n    <div className={classes.root}>\n      <header className={classes.header}>\n        <p>🚀🚀💎🤲💎🤲🚀🚀</p>\n            When Moon?\n        <p>🚀🚀💎🤲💎🤲🚀🚀</p>\n      </header>\n\n      <div>\n        Streak: {streak}\n      </div>\n      <div>\n        {doneState === 'win' ? 'YOU WON!' : ''}\n        {doneState === 'lose' ? 'YOU LOST!' : ''}\n      </div>\n\n      <div>\n        <Button onClick={handleNowClick} color=\"primary\" variant=\"contained\" disabled={doneState !== undefined}>Now</Button>\n        <Button onClick={handleLaterClick} color=\"secondary\" variant=\"contained\" disabled={doneState !== undefined}>Later</Button>\n      </div>\n\n      <div>\n        Seed: {seed}\n        <Button onClick={handleNextChartClick} variant=\"contained\">Next Chart</Button>\n      </div>\n\n      { ethereumOHLC &&\n        <div className={classes.chartContainer}>\n          <Custom data={ethereumOHLC} />\n        </div>\n      }\n\n      <div className={classes.todos}>\n        GOALS\n        <ul>\n          <li>✅Show chart of current Ethereum price using Coingecko API</li>\n          <li>✅Show chart of random Ethereum price using Coingecko API</li>\n          <li>✅Hide data on chart and add button to reveal hidden data</li>\n          <li>✅Let user provide input - does hidden data go up or down</li>\n          <li>✅Record user input</li>\n          <li>✅Reveal hidden chart data</li>\n          <li>Record result of user input + revealed data</li>\n          <li>Persist results of chart</li>\n          <li>Reveal statistics for all users for given chart</li>\n          <li>Allow for non-Ethereum coins to be included</li>\n          <li>Make shiny.</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export * from \"./iOHLCData\";\nexport * from \"./withOHLCData\";\nexport * from \"./withUpdatingData\";\n","import { tsvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport * as React from \"react\";\nimport TSV from 'tsv';\nimport { IOHLCData } from \"./iOHLCData\";\nimport thirtyMinuteData from './thirtyMinuteData.json';\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\n\nconst parseData = () => {\n    return (d: any) => {\n        const date = parseDate(d.date);\n        if (date === null) {\n            d.date = new Date(Number(d.date));\n        } else {\n            d.date = new Date(date);\n        }\n\n        for (const key in d) {\n            if (key !== \"date\" && Object.prototype.hasOwnProperty.call(d, key)) {\n                d[key] = +d[key];\n            }\n        }\n\n        return d as IOHLCData;\n    };\n};\n\ninterface WithOHLCDataProps {\n    readonly data: IOHLCData[];\n}\n\ninterface WithOHLCState {\n    data?: IOHLCData[];\n    message: string;\n}\n\nexport function withOHLCData(dataSet = \"DAILY\") {\n    return <TProps extends WithOHLCDataProps>(OriginalComponent: React.ComponentClass<TProps>) => {\n        return class WithOHLCData extends React.Component<Omit<TProps, \"data\">, WithOHLCState> {\n            public constructor(props: Omit<TProps, \"data\">) {\n                super(props);\n\n                this.state = {\n                    message: `Loading ${dataSet} data...`,\n                };\n            }\n\n            public componentDidMount() {\n                const parsedData = thirtyMinuteData.map(([timestamp, open, high, low, close]) => {\n                    return {\n                        date: new Date(timestamp),\n                        open,\n                        high,\n                        low,\n                        close,\n                    };\n                });\n\n                const tsvString = TSV.stringify(parsedData);\n\n                const ourData = tsvParse(tsvString, parseData());\n\n                this.setState({\n                    data: ourData,\n                });\n            }\n\n            public render() {\n                const { data, message } = this.state;\n                if (data === undefined) {\n                    return <div className=\"center\">{message}</div>;\n                }\n\n                return <OriginalComponent {...(this.props as TProps)} data={data} />;\n            }\n        };\n    };\n}\n"],"sourceRoot":""}