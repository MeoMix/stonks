{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","root","display","flexDirection","backgroundColor","minHeight","fontSize","color","alignItems","header","textAlign","todos","list","App","classes","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAGMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,gBAAiB,UACjBC,UAAW,QACXC,SAAU,qBACVC,MAAO,QACPC,WAAY,UAGdC,OAAQ,CACNC,UAAW,UAGbC,MAAO,CACLT,QAAS,QAGXU,KAAM,KA+BOC,MA3Bf,WACE,IAAMC,EAAUf,IAEhB,OACE,sBAAKgB,UAAWD,EAAQb,KAAxB,UACE,wBAAQc,UAAWD,EAAQL,OAA3B,SACE,8BACE,iIADF,aAGE,sIAIJ,sBAAKM,UAAWD,EAAQH,MAAxB,iBAEE,qBAAII,UAAWD,EAAQF,KAAvB,UACE,0EACA,gFACA,+FACA,kHC/BKI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c402bb55.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#282c34',\n    minHeight: '100vh',\n    fontSize: 'calc(10px + 2vmin)',\n    color: 'white',\n    alignItems: 'center',\n  },\n\n  header: {\n    textAlign: 'center',\n  },\n\n  todos: {\n    display: 'flex',\n  },\n\n  list: {\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <header className={classes.header}>\n        <p>\n          <p>ðŸš€ðŸš€ðŸ’ŽðŸ¤²ðŸ’ŽðŸ¤²ðŸš€ðŸš€</p>\n              When Moon?\n          <p>ðŸš€ðŸš€ðŸ’ŽðŸ¤²ðŸ’ŽðŸ¤²ðŸš€ðŸš€</p>\n        </p>\n      </header>\n\n      <div className={classes.todos}>\n        TODO\n        <ul className={classes.list}>\n          <li>Add support for monitoring SSB sentiment</li>\n          <li>Add basic calendar for tracking upcoming plays</li>\n          <li>Add ability to evaluate efficacy of past-due calendar entries</li>\n          <li>Stretch - add support for tracking active positions, gains, and losses</li>\n        </ul>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}